<%- include('../partials/user/header') %>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />

<style>
    /* General Layout */
    body {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        background-color: #fafbfc;
        color: #1a1d29;
        line-height: 1.6;
        margin: 0;
        padding: 0;
    }

    .main {
        padding: 40px 0;
    }

    /* Breadcrumb Styling */
    .page-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        padding: 20px 0;
        margin-bottom: 40px;
    }

    .breadcrumb {
        color: white;
        font-size: 14px;
        margin: 0;
        background: transparent;
        padding: 0;
    }

    .breadcrumb a {
        color: rgba(255, 255, 255, 0.8);
        text-decoration: none;
        transition: color 0.3s ease;
    }

    .breadcrumb a:hover {
        color: white;
    }

    .breadcrumb span {
        color: white;
        margin: 0 8px;
    }

    /* Order Header */
    .order-header {
        background: white;
        border-radius: 20px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.08);
        padding: 30px 40px;
        margin-bottom: 30px;
        text-align: center;
    }

    .order-header h2 {
        font-size: 28px;
        font-weight: 700;
        color: #2d3748;
        margin-bottom: 16px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 12px;
    }

    .order-header h2 i {
        color: #667eea;
    }

    .order-info {
        color: #6c757d;
        font-size: 16px;
        margin-bottom: 20px;
    }

    .order-status {
        margin-bottom: 24px;
    }

    .status-badge {
        font-size: 16px;
        padding: 12px 24px;
        border-radius: 25px;
        font-weight: 600;
        letter-spacing: 0.5px;
    }

    .return-alert {
        background: linear-gradient(135deg, #fed7aa 0%, #fb923c 100%);
        border: none;
        border-radius: 12px;
        padding: 16px 20px;
        margin-top: 20px;
        color: #7c2d12;
    }

    .invoice-btn {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 12px 24px;
        border: none;
        border-radius: 12px;
        font-weight: 600;
        text-decoration: none;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 8px;
    }

    .invoice-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 12px 30px rgba(102, 126, 234, 0.3);
        color: white;
    }

    /* Order Items Container */
    .order-items-container {
        background: white;
        border-radius: 20px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.08);
        overflow: hidden;
        margin-bottom: 30px;
    }

    .items-header {
        background: linear-gradient(135deg, #f8f9ff 0%, #e3e7ff 100%);
        padding: 20px 30px;
        border-bottom: 1px solid #e9ecef;
        display: flex;
        justify-content: between;
        align-items: center;
    }

    .items-header h5 {
        font-size: 18px;
        font-weight: 700;
        color: #2d3748;
        margin: 0;
    }

    .total-info {
        color: #6c757d;
        font-size: 14px;
    }

    .cancel-order-btn {
        background: linear-gradient(135deg, #fc8181 0%, #f56565 100%);
        color: white;
        border: none;
        padding: 8px 16px;
        border-radius: 8px;
        font-size: 14px;
        font-weight: 600;
        transition: transform 0.3s ease;
    }

    .cancel-order-btn:hover {
        transform: translateY(-1px);
        color: white;
    }

    .cancel-order-btn:disabled {
        background: #e2e8f0;
        color: #a0aec0;
        cursor: not-allowed;
        transform: none;
    }

    /* Product Cards */
    .product-card {
        background: white;
        border: 1px solid #e9ecef;
        border-radius: 16px;
        margin: 20px 30px;
        padding: 25px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .product-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 12px 30px rgba(0, 0, 0, 0.1);
    }

    .product-card:last-child {
        margin-bottom: 30px;
    }

    .product-image {
        width: 100px;
        height: 100px;
        object-fit: cover;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .product-details h6 {
        font-size: 18px;
        font-weight: 600;
        color: #2d3748;
        margin-bottom: 8px;
    }

    .product-meta {
        color: #6c757d;
        font-size: 14px;
        margin-bottom: 4px;
    }

    .product-price {
        font-size: 20px;
        font-weight: 700;
        color: #2d3748;
        margin-bottom: 12px;
    }

    .cancel-item-btn {
        background: linear-gradient(135deg, #fc8181 0%, #f56565 100%);
        color: white;
        border: none;
        padding: 8px 16px;
        border-radius: 8px;
        font-size: 14px;
        font-weight: 600;
        transition: transform 0.3s ease;
    }

    .cancel-item-btn:hover {
        transform: translateY(-1px);
        color: white;
    }

    .cancel-item-btn:disabled {
        background: #e2e8f0;
        color: #a0aec0;
        cursor: not-allowed;
        transform: none;
    }

    /* Sidebar Cards */
    .sidebar-card {
        background: white;
        border-radius: 20px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.08);
        padding: 30px;
        margin-bottom: 30px;
    }

    .sidebar-card h6 {
        font-size: 18px;
        font-weight: 700;
        color: #2d3748;
        margin-bottom: 20px;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .sidebar-card h6 i {
        color: #667eea;
    }

    .address-info {
        color: #4a5568;
        line-height: 1.6;
    }

    .address-info b {
        color: #2d3748;
    }

    .address-error {
        color: #e53e3e;
    }

    /* Payment Summary */
    .payment-row {
        display: flex;
        justify-content: space-between;
        padding: 12px 0;
        border-bottom: 1px solid #f1f5f9;
    }

    .payment-row:last-child {
        border-bottom: 2px solid #667eea;
        padding-top: 16px;
        padding-bottom: 16px;
        font-weight: 700;
        font-size: 18px;
    }

    .payment-label {
        color: #4a5568;
        font-weight: 600;
    }

    .payment-amount {
        color: #2d3748;
        font-weight: 700;
    }

    .text-success {
        color: #38a169 !important;
    }

    .text-brand {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    /* Return Button */
     .return-item-btn {
        background: linear-gradient(135deg, #ed8936 0%, #dd6b20 100%);
        color: white;
        border: none;
        padding: 8px 16px;
        border-radius: 8px;
        font-size: 14px;
        font-weight: 600;
        transition: transform 0.3s ease;
    }

    .return-item-btn:hover {
        transform: translateY(-2px);
        color: white;
    }

    .return-item-btn:disabled {
        background: #e2e8f0;
        color: #a0aec0;
        cursor: not-allowed;
        transform: none;
    }
    .return-btn {
        background: linear-gradient(135deg, #ed8936 0%, #dd6b20 100%);
        color: white;
        border: none;
        padding: 16px 24px;
        border-radius: 12px;
        font-weight: 600;
        width: 100%;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .return-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 12px 30px rgba(237, 137, 54, 0.3);
        color: white;
    }

    .return-btn:disabled {
        background: #e2e8f0;
        color: #a0aec0;
        cursor: not-allowed;
        transform: none;
    }

    /* Modal Styling */
    .modal-content {
        border-radius: 20px;
        border: none;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.2);
    }

    .modal-header {
        background: linear-gradient(135deg, #f8f9ff 0%, #e3e7ff 100%);
        border-bottom: 1px solid #e9ecef;
        border-radius: 20px 20px 0 0;
        padding: 20px 30px;
    }

    .modal-title {
        font-weight: 700;
        color: #2d3748;
    }

    .modal-body {
        padding: 30px;
    }

    .modal-footer {
        border-top: 1px solid #e9ecef;
        padding: 20px 30px;
    }

    .form-control {
        border-radius: 12px;
        border: 2px solid #e2e8f0;
        padding: 12px 16px;
        transition: border-color 0.3s ease;
    }

    .form-control:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
    }

    /* Responsive Design */
    @media (max-width: 768px) {
        .order-header {
            padding: 20px;
        }

        .order-header h2 {
            font-size: 22px;
        }

        .product-card {
            margin: 15px 20px;
            padding: 20px;
        }

        .product-image {
            width: 80px;
            height: 80px;
        }

        .sidebar-card {
            padding: 20px;
        }

        .items-header {
            padding: 15px 20px;
        }

        /* Modal Flickering Fix */
        .modal {
            transition: opacity 0.15s linear !important;
        }

        .modal.fade .modal-dialog {
            transition: transform 0.15s ease-out !important;
        }

        .modal.show .modal-dialog {
            transform: none !important;
        }

        .modal-backdrop {
            transition: opacity 0.15s linear !important;
        }

        .modal {
            z-index: 1055 !important;
        }

        .modal-backdrop {
            z-index: 1050 !important;
        }
            }
</style>

<main class="main">
    <div class="page-header">
        <div class="container">
            <div class="breadcrumb">
                <a href="/" rel="nofollow">Home</a>
                <span>></span><a href="/orders" rel="nofollow">Orders</a>
                <span>></span> Order Details
            </div>
        </div>
    </div>

    <div class="container">
        <!-- Order Header -->
        <div class="order-header">
            <h2>
                <i class="fas fa-receipt"></i>
                Order ID: <%= order.orderId %>
            </h2>
            <% const activeItemsCount = order.orderedItems.filter(item => item.status !== 'Cancelled').length; %>
            <p class="order-info">Placed on <%= order.createdOn.toDateString() %> • ₹<%= order.finalAmount %> for <%= activeItemsCount %> items</p>

            <div class="order-status">
                <% 
                    const statusBadgeMap = {
                        'Pending': 'secondary',
                        'Processing': 'info',
                        'Shipped': 'primary',
                        'Delivered': 'success',
                        'Cancelled': 'warning',
                        'Returned': 'danger'
                    };
                    const badgeColor = statusBadgeMap[order.status] || 'secondary';
                %>
                <span class="badge bg-<%= badgeColor %> status-badge"><%= order.status %></span>
            </div>

            <% if (order.status === 'Return Request' || order.status === 'Returned') { %>
                <div class="return-alert">
                    <strong>Return Reason:</strong> <%= order.returnReason %>
                </div>
            <% } %>
            <% if (order.status === 'Delivered' || order.status === 'Returned') { %>
            <a href="/invoice/<%= order._id %>" class="invoice-btn" target="_blank">
                <i class="bi bi-download"></i> Download Invoice
            </a>
            <% } %>
        </div>

        <div class="row">
            <div class="col-lg-8">
                <!-- Order Items -->
                <div class="order-items-container">
                    <div class="items-header">
                        <div>
                            <h5>Order Items</h5>
                            <p class="total-info mb-0">₹<%= order.totalPrice %> for <%= activeItemsCount %> items</p>
                        </div>
                        <div>
                            <% const allItemsCancelled = order.orderedItems.every(item => item.status === 'Cancelled')%>
                            <% const isCancelable = ['Pending', 'Processing'].includes(order.status); %>
                            <% if (order.status === 'Cancelled'|| allItemsCancelled || !isCancelable) { %>
                                 <% if (order.status === 'Cancelled'|| allItemsCancelled) { %>
                                <button type="button" class="cancel-order-btn" disabled>Order Cancelled</button>
                                 <% } %>
                            <% } else { %>
                              
                                <button type="button" class="cancel-order-btn" data-bs-toggle="modal" data-bs-target="#cancelOrderModal">Cancel Order</button>
                              
                            <% } %>
                        </div>
                    </div>

                    <% order.orderedItems.forEach(item => { %>
                        <div class="product-card">
                            <div class="row align-items-center">
                                <div class="col-md-3 text-center">
                                    <img src="/uploads/re-image/<%= item.product.productImage[0] %>" class="product-image" alt="Product Image">
                                </div>
                                <div class="col-md-6">
                                    <div class="product-details">
                                        <h6><%= item.product.productName %></h6>
                                        <p class="product-meta">Size: <%= item.size %> yrs</p>
                                        <p class="product-meta">Quantity: <%= item.quantity %></p>
                                    </div>
                                </div>
                                <div class="col-md-3 text-end">
                                    <% const totalItemPrice = item.price * item.quantity; %>
                                    <p class="product-price">₹<%= totalItemPrice %></p>
                                    
                                    <% if (order.status !== 'Cancelled') { %>
                                        <% if (['Confirmed'].includes(item.status) && ['Pending', 'Processing'].includes(order.status)) { %>
                                            <button type="button" class="cancel-item-btn" data-bs-toggle="modal" data-bs-target="#cancelItemModal" data-order-id="<%= order.orderId %>" data-product-id="<%= item.product._id %>">
                                                Cancel Item
                                            </button>

                                        <% } else if (item.status === 'Cancelled') { %>
                                            <button type="button" class="cancel-item-btn" disabled>Item Cancelled</button>
                                        <% } %>
                                        <% if (order.status === 'Delivered' && item.status !== 'Cancelled' && item.status !== 'Returned') { %>
                                            <button type="button" class="return-item-btn" data-bs-toggle="modal" data-bs-target="#returnItemModal" data-order-id="<%= order.orderId %>" data-product-id="<%= item.product._id %>">
                                                Return Item
                                            </button>
                                            <% } else if (item.status === 'Returned' && order.status === 'Return Request') { %>
                                            <button class="return-item-btn" disabled>Item Return Requested</button>
                                            <% } else if (item.status === 'Returned' && order.status === 'Returned') { %>
                                            <button class="return-item-btn" disabled>Item Returned</button>
                                            <% } else if (item.status === 'Returned' && order.status === 'Return Rejected') { %>
                                            <button class="return-item-btn" disabled>Item Return Rejected</button>
                                            <% } %>
                                    <% } %>
                                </div>
                            </div>
                        </div>
                    <% }) %>
                </div>
            </div>

            <div class="col-lg-4">
                <!-- Shipping Address -->
                <div class="sidebar-card">
                    <h6>
                        <i class="fas fa-map-marker-alt"></i>
                        Shipping Address
                    </h6>
                    <% if (order.address) { %>
                        <div class="address-info">
                            <p class="mb-2"><b><%= order.address.name %></b></p>
                            <p class="mb-2">Phone: <%= order.address.phone %> / <%= order.address.altPhone %></p>
                            <p class="mb-0">
                                <%= order.address.houseName %>,<br>
                                <%= order.address.streetName %>,<br>
                                <%= order.address.landMark %>,<br>
                                <%= order.address.city %> - <%= order.address.pincode %>, <%= order.address.state %>
                            </p>
                        </div>
                    <% } else { %>
                        <div class="address-error">
                            <p class="mb-0">No address found for this order.</p>
                        </div>
                    <% } %>
                </div>

                <!-- Payment Summary -->
                <div class="sidebar-card">
                    <h6>
                        <i class="fas fa-receipt"></i>
                        Payment Summary
                    </h6>
                    <div class="payment-row">
                        <span class="payment-label">Total item price</span>
                        <span class="payment-amount">₹<%= order.totalPrice %></span>
                    </div>
                    <div class="payment-row">
                        <span class="payment-label">Item discount</span>
                        <span class="payment-amount text-success">-₹<%= order.discount %></span>
                    </div>
                    <% if (order.status !== 'Cancelled') { %>
                        <div class="payment-row">
                            <span class="payment-label">Shipping</span>
                            <span class="payment-amount">₹<%= shipping %></span>
                        </div>
                    <% } %>
                    <div class="payment-row">
                        <span class="payment-label">Total</span>
                        <span class="payment-amount text-brand">₹<%= order.finalAmount %></span>
                    </div>
                </div>

                <!-- Payment Mode -->
                <div class="sidebar-card">
                    <h6>
                        <i class="fas fa-credit-card"></i>
                        Payment Mode
                    </h6>
                    <p class="mb-1">Cash On Delivery</p>
                    <p class="mb-0">₹<%= order.finalAmount %> due</p>
                </div>

                <!-- Return Button -->
                <% if (order.status === 'Delivered') { %>
                    <button type="button" class="return-btn" data-bs-toggle="modal" data-bs-target="#returnOrderModal">
                        Return Order
                    </button>
                <% } else if (order.status === 'Return Request') { %>
                    <button class="return-btn" disabled>Return Request Pending</button>
                <% } else if (order.status === 'Returned') { %>
                    <button class="return-btn" disabled>Order Returned</button>
                <% } else if(order.status ==='Return Rejected'){ %>
                    <button class="return-btn" disabled>Return Request Rejected</button>
                <% } %>
            </div>
        </div>
    </div>
</main>

<!-- Single Cancel Item Modal -->
<div class="modal fade" id="cancelItemModal" tabindex="-1" aria-labelledby="cancelItemModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form action="/cancel-item" method="POST" class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="cancelItemModalLabel">Cancel Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" name="orderId" id="cancelOrderIdInput">
                <input type="hidden" name="productId" id="cancelProductIdInput">
                <label for="itemCancelReason" class="form-label">Reason (optional)</label>
                <textarea class="form-control" name="reason" id="itemCancelReason" rows="3" placeholder="Why cancel this item?"></textarea>
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-outline-danger">Confirm Cancel</button>
            </div>
        </form>
    </div>
</div>                                           

<!-- Cancel Order Modal -->
<div class="modal fade" id="cancelOrderModal" tabindex="-1" aria-labelledby="cancelOrderModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form action="/cancel-order" method="POST" class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="cancelOrderModalLabel">Cancel Entire Order</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" name="orderId" value="<%= order.orderId %>">
                <label for="cancelReason" class="form-label">Reason (optional)</label>
                <textarea class="form-control" name="reason" id="cancelReason" rows="3" placeholder="Why are you cancelling?"></textarea>
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-outline-danger">Confirm Cancel</button>
            </div>
        </form>
    </div>
</div>

<!-- Return Order Modal -->
<div class="modal fade" id="returnOrderModal" tabindex="-1" aria-labelledby="returnOrderModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form action="/return-order" method="POST" class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="returnOrderModalLabel">Return Order</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" name="orderId" value="<%= order.orderId %>">
                <label for="returnReason" class="form-label">Reason for return <span class="text-danger">*</span></label>
                <textarea class="form-control" name="reason" id="returnReason" rows="3" required placeholder="State reason for returning the order"></textarea>
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-warning">Submit Return Request</button>
            </div>
        </form>
    </div>
</div>


<!-- Return Single Item Modal -->
<div class="modal fade" id="returnItemModal" tabindex="-1" aria-labelledby="returnItemModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <form action="/return-item" method="POST" class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="returnItemModalLabel">Return Product</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <input type="hidden" name="orderId" id="returnOrderIdInput">
        <input type="hidden" name="productId" id="returnProductIdInput">
        <label for="returnItemReason" class="form-label">Reason for return <span class="text-danger">*</span></label>
        <textarea class="form-control" name="reason" id="returnItemReason" rows="3" required placeholder="Why are you returning this item?"></textarea>
      </div>
      <div class="modal-footer">
        <button type="submit" class="btn btn-warning">Submit Return Request</button>
      </div>
    </form>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    const urlParams = new URLSearchParams(window.location.search);

    if (urlParams.get('returnSuccess') === 'true') {
        Swal.fire({
            icon: 'success',
            title: 'Return Request Submitted',
            text: 'Your return request has been successfully submitted.',
            confirmButtonColor: '#667eea'
        }).then(() => {
            const url = new URL(window.location);
            url.searchParams.delete('returnSuccess');
            window.history.replaceState({}, document.title, url.toString());
        });
    }

    if (urlParams.get('cancelSuccess') === 'true') {
        Swal.fire({
            icon: 'success',
            title: 'Order Cancelled',
            text: 'Your order has been successfully cancelled.',
            confirmButtonColor: '#d33'
        }).then(() => {
            const url = new URL(window.location);
            url.searchParams.delete('cancelSuccess');
            window.history.replaceState({}, document.title, url.toString());
        });
    }

    if (urlParams.get('itemCancelSuccess') === 'true') {
        Swal.fire({
            icon: 'success',
            title: 'Product Cancelled',
            text: 'The product was successfully cancelled from your order.',
            confirmButtonColor: '#d33'
        }).then(() => {
            const url = new URL(window.location);
            url.searchParams.delete('itemCancelSuccess');
            window.history.replaceState({}, document.title, url.toString());
        });
    }
</script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const cancelItemModal = document.getElementById('cancelItemModal');

    cancelItemModal.addEventListener('show.bs.modal', function (event) {
      const button = event.relatedTarget;

      // Get values from button
      const orderId = button.getAttribute('data-order-id');
      const productId = button.getAttribute('data-product-id');

      // Set values to the form inputs
      document.getElementById('cancelOrderIdInput').value = orderId;
      document.getElementById('cancelProductIdInput').value = productId;

      // Optional: clear the reason input each time
      document.getElementById('itemCancelReason').value = '';
    });

    // Optional: Hide any currently open modal before opening a new one
    document.addEventListener('show.bs.modal', function (event) {
      const openModals = document.querySelectorAll('.modal.show');
      openModals.forEach(modal => {
        if (modal !== event.target) {
          bootstrap.Modal.getInstance(modal)?.hide();
        }
      });
    });

    // === 1. Handle Return Item Modal Button Click ===
    const returnButtons = document.querySelectorAll('.return-item-btn');
    const returnOrderIdInput = document.getElementById('returnOrderIdInput');
    const returnProductIdInput = document.getElementById('returnProductIdInput');

    returnButtons.forEach(btn => {
      btn.addEventListener('click', function () {
        returnOrderIdInput.value = this.dataset.orderId;
        returnProductIdInput.value = this.dataset.productId;
      });
    });


  });
</script>



<%- include('../partials/user/footer') %>