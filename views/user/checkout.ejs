<%- include("../../views/partials/user/header") %>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

<style>
    /* General Layout */
    body {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        background-color: #fafbfc;
        color: #1a1d29;
        line-height: 1.6;
        margin: 0;
        padding: 0;
    }

    .main {
        padding: 40px 0;
    }

    /* Page Header */
    .page-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        padding: 20px 0;
        margin-bottom: 40px;
    }

    .checkout-title {
        color: white;
        font-size: 32px;
        font-weight: 700;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .checkout-title i {
        color: rgba(255, 255, 255, 0.9);
    }

    /* Card Styling */
    .checkout-card {
        background: white;
        border-radius: 20px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.08);
        overflow: hidden;
        margin-bottom: 30px;
        border: none;
    }

    .checkout-card .card-header {
        background: linear-gradient(135deg, #f8f9ff 0%, #e3e7ff 100%);
        border-bottom: 1px solid #e9ecef;
        padding: 25px 30px;
        border-radius: 0;
    }

    .checkout-card .card-header h5 {
        color: #2d3748;
        font-weight: 700;
        font-size: 20px;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .checkout-card .card-header h5 i {
        color: #667eea;
    }

    .checkout-card .card-body {
        padding: 30px;
    }

    /* Address Section */
    .address-item {
        background: #f8f9fa;
        border: 2px solid #e9ecef;
        border-radius: 16px;
        padding: 20px;
        margin-bottom: 20px;
        transition: all 0.3s ease;
        position: relative;
    }

    .address-item:hover {
        box-shadow: 0 4px 20px rgba(102, 126, 234, 0.1);
        border-color: #667eea;
    }

    .address-item.selected {
        border-color: #667eea;
        background: linear-gradient(135deg, #f8f9ff 0%, #e3e7ff 100%);
    }

    .form-check-input {
        width: 1.5em;
        height: 1.5em;
        margin-top: 0;
        margin-right: 12px;
        border: 2px solid #cbd5e0;
        border-radius: 50%;
    }

    .form-check-input:checked {
        background-color: #667eea;
        border-color: #667eea;
    }

    .form-check-label {
        cursor: pointer;
        width: 100%;
    }

    .address-type {
        background: #667eea;
        color: white;
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 600;
        text-transform: uppercase;
        display: inline-block;
        margin-bottom: 12px;
    }

    .address-details {
        color: #4a5568;
        font-size: 14px;
        line-height: 1.6;
    }

    .address-details strong {
        color: #2d3748;
    }

    .address-actions {
        position: absolute;
        top: 20px;
        right: 20px;
        display: flex;
        gap: 8px;
    }

    .address-actions .btn {
        width: 35px;
        height: 35px;
        border-radius: 8px;
        padding: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 14px;
        transition: all 0.3s ease;
    }

    .address-actions .btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }

    /* Add Address Button */
    .add-address-btn {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        padding: 12px 20px;
        border-radius: 12px;
        font-weight: 600;
        font-size: 14px;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .add-address-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
        color: white;
    }

    /* Payment Method Section */
    .payment-option {
        background: #f8f9fa;
        border: 2px solid #e9ecef;
        border-radius: 12px;
        padding: 16px 20px;
        margin-bottom: 12px;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .payment-option:hover {
        border-color: #667eea;
        box-shadow: 0 2px 8px rgba(102, 126, 234, 0.1);
    }

    .payment-option.selected {
        border-color: #667eea;
        background: linear-gradient(135deg, #f8f9ff 0%, #e3e7ff 100%);
    }

    .payment-option input[type="radio"] {
        width: 1.2em;
        height: 1.2em;
        border: 2px solid #cbd5e0;
    }

    .payment-option input[type="radio"]:checked {
        background-color: #667eea;
        border-color: #667eea;
    }

    .payment-option label {
        margin: 0;
        font-weight: 500;
        color: #2d3748;
        cursor: pointer;
        flex: 1;
    }

    .payment-option.disabled {
        opacity: 0.6;
        cursor: not-allowed;
    }

    .payment-option.disabled label {
        cursor: not-allowed;
    }

    /* Order Summary */
    .order-summary {
        position: sticky;
        top: 100px;
    }

    .order-item {
        display: flex;
        align-items: center;
        padding: 16px 0;
        border-bottom: 1px solid #f1f5f9;
    }

    .order-item:last-child {
        border-bottom: none;
    }

    .item-image {
        width: 60px;
        height: 60px;
        object-fit: cover;
        border-radius: 12px;
        margin-right: 16px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .item-details h6 {
        margin: 0 0 4px 0;
        font-size: 15px;
        font-weight: 600;
        color: #2d3748;
    }

    .item-details .text-muted {
        font-size: 13px;
        color: #6c757d;
        margin: 0;
    }

    .item-price {
        font-weight: 700;
        color: #2d3748;
        margin-left: auto;
    }

    .offer-badge {
        background: linear-gradient(135deg, #48bb78 0%, #38a169 100%);
        color: white;
        padding: 2px 8px;
        border-radius: 12px;
        font-size: 11px;
        font-weight: 600;
        margin-top: 4px;
        display: inline-block;
    }

    /* Price Summary */
    .price-summary {
        background: #f8f9fa;
        border-radius: 12px;
        padding: 20px;
        margin: 20px 0;
    }

    .price-summary h5 {
        color: #2d3748;
        font-weight: 700;
        margin-bottom: 16px;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .price-summary h5 i {
        color: #667eea;
    }

    .price-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px 0;
        border-bottom: 1px solid #e9ecef;
    }

    .price-row:last-child {
        border-bottom: none;
        padding-top: 16px;
        font-weight: 700;
        font-size: 18px;
        color: #2d3748;
    }

    .price-row .text-success {
        font-weight: 600;
    }

    /* Place Order Button */
    .place-order-btn {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        padding: 16px 24px;
        border-radius: 12px;
        font-weight: 700;
        font-size: 16px;
        width: 100%;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }

    .place-order-btn:hover:not(:disabled) {
        transform: translateY(-2px);
        box-shadow: 0 12px 30px rgba(102, 126, 234, 0.3);
        color: white;
    }

    .place-order-btn:disabled {
        background: #cbd5e0;
        cursor: not-allowed;
        transform: none;
        box-shadow: none;
    }

    /* Modal Enhancements */
    .modal-content {
        border-radius: 16px;
        border: none;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
    }

    .modal-header {
        background: linear-gradient(135deg, #f8f9ff 0%, #e3e7ff 100%);
        border-bottom: 1px solid #e9ecef;
        border-radius: 16px 16px 0 0;
        padding: 20px 30px;
    }

    .modal-header h5 {
        color: #2d3748;
        font-weight: 700;
        margin: 0;
    }

    .modal-body {
        padding: 30px;
        color: #4a5568;
        font-size: 16px;
    }

    .modal-footer {
        border-top: 1px solid #e9ecef;
        padding: 20px 30px;
        background: #f8f9fa;
        border-radius: 0 0 16px 16px;
    }

    .modal-footer .btn {
        padding: 12px 24px;
        border-radius: 8px;
        font-weight: 600;
    }

    /* Empty State */
    .empty-address {
        text-align: center;
        padding: 40px 20px;
        color: #6c757d;
    }

    .empty-address i {
        font-size: 48px;
        color: #e2e8f0;
        margin-bottom: 16px;
    }

    .coupon-card:hover {
        border: 2px solid #0d6efd;
        background-color: #f0f8ff;
    }
    /* Responsive Design */
    @media (max-width: 768px) {
        .checkout-title {
            font-size: 24px;
        }
        
        .checkout-card .card-header,
        .checkout-card .card-body {
            padding: 20px;
        }
        
        .address-item {
            padding: 16px;
        }
        
        .address-actions {
            position: static;
            margin-top: 16px;
            justify-content: flex-end;
        }
        
        .order-summary {
            position: static;
            margin-top: 30px;
        }
    }

    @media (max-width: 576px) {
        .main {
            padding: 20px 0;
        }
        
        .page-header {
            margin-bottom: 20px;
        }
        
        .item-image {
            width: 50px;
            height: 50px;
            margin-right: 12px;
        }
        
        .modal-header,
        .modal-body,
        .modal-footer {
            padding: 20px;
        }
    }
</style>

<main class="main">
    <div class="page-header">
        <div class="container">
            <h2 class="checkout-title">
                <i class="fas fa-credit-card"></i>
                Checkout
            </h2>
        </div>
    </div>

    <% if (retryOrderId) { %>
    <div class="alert alert-warning d-flex align-items-center mt-2">
        <i class="fas fa-exclamation-triangle me-2"></i>
        You are retrying payment for a previously failed order.
    </div>
    <% } %>


    <div class="container">
        <div class="row g-4">
            <!-- Left Column: Address and Payment -->
            <div class="col-lg-7">
                <!-- Address Section -->
                <div class="checkout-card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5>
                            <i class="fas fa-map-marker-alt"></i>
                            Delivery Address
                        </h5>
                        <a href="/addAddress?from=checkout">
                            <button class="add-address-btn">
                                <i class="fas fa-plus"></i>
                                Add Address
                            </button>
                        </a>
                    </div>
                    <div class="card-body">
                        <% if (userAddresses && userAddresses.length > 0) { %>
                            <% userAddresses.forEach((address, index) => { %>
                                <div class="address-item <%= address.isDefault ? 'selected' : '' %>">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="selectedAddress" 
                                               id="address<%= index %>" value="<%= address._id %>" 
                                               <%= address.isDefault ? 'checked' : '' %> required>
                                        <label class="form-check-label" for="address<%= index %>">
                                            <div class="address-type"><%= address.addressType %></div>
                                            <div class="address-details">
                                                <strong><%= address.name %></strong><br>
                                                <%= address.houseName %>, <%= address.streetName %><br>
                                                <%= address.landMark %>, <%= address.city %> - <%= address.pincode %><br>
                                                <%= address.state %><br>
                                                <strong>Phone:</strong> <%= address.phone %><br>
                                                <strong>Alt Phone:</strong> <%= address.altPhone %>
                                            </div>
                                        </label>
                                    </div>
                                    <div class="address-actions">
                                        <button class="btn btn-outline-primary btn-sm" data-bs-toggle="modal" data-bs-target="#editAddressModal<%= index %>">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <!-- <form method="GET" action="/deleteAddress?id=<%= address._id %>" class="d-inline" onsubmit="return confirmDelete()">
                                            <button class="btn btn-outline-danger btn-sm" type="submit">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </form> -->
                                    </div>
                                </div>

                                <!-- Edit Address Modal -->
                                <div class="modal fade" id="editAddressModal<%= index %>" tabindex="-1">
                                    <div class="modal-dialog">
                                        <form class="modal-content" method="POST" action="/editAddress?id=<%= address._id %>">
                                            <div class="modal-header">
                                                <h5>Edit Address</h5>
                                                <button class="btn-close" data-bs-dismiss="modal"></button>
                                            </div>
                                            <div class="modal-body">
                                                <div class="mb-3">
                                                    <label for="addressType<%= index %>" class="form-label fw-bold">Address Type</label>
                                                    <input type="text" id="addressType<%= index %>" class="form-control" name="addressType" value="<%= address.addressType %>" required>
                                                </div>
                                                <div class="mb-3">
                                                    <label for="name<%= index %>" class="form-label fw-bold">Name</label>
                                                    <input type="text" id="name<%= index %>" class="form-control" name="name" value="<%= address.name %>" required>
                                                </div>
                                                <div class="mb-3">
                                                    <label for="houseName<%= index %>" class="form-label fw-bold">House Name/No</label>
                                                    <input type="text" id="houseName<%= index %>" class="form-control" name="houseName" value="<%= address.houseName %>" required>
                                                </div>
                                                <div class="mb-3">
                                                    <label for="streetName<%= index %>" class="form-label fw-bold">Street Name</label>
                                                    <input type="text" id="streetName<%= index %>" class="form-control" name="streetName" value="<%= address.streetName %>" required>
                                                </div>
                                                <div class="mb-3">
                                                    <label for="landMark<%= index %>" class="form-label fw-bold">Landmark</label>
                                                    <input type="text" id="landMark<%= index %>" class="form-control" name="landMark" value="<%= address.landMark %>" required>
                                                </div>
                                                <div class="row">
                                                    <div class="col-md-6 mb-3">
                                                        <label for="city<%= index %>" class="form-label fw-bold">City</label>
                                                        <input type="text" id="city<%= index %>" class="form-control" name="city" value="<%= address.city %>" required>
                                                    </div>
                                                    <div class="col-md-6 mb-3">
                                                        <label for="pincode<%= index %>" class="form-label fw-bold">Pincode</label>
                                                        <input type="text" id="pincode<%= index %>" class="form-control" name="pincode" value="<%= address.pincode %>" required>
                                                    </div>
                                                </div>
                                                <div class="mb-3">
                                                    <label for="state<%= index %>" class="form-label fw-bold">State</label>
                                                    <input type="text" id="state<%= index %>" class="form-control" name="state" value="<%= address.state %>" required>
                                                </div>
                                                <div class="row">
                                                    <div class="col-md-6 mb-3">
                                                        <label for="phone<%= index %>" class="form-label fw-bold">Phone</label>
                                                        <input type="text" id="phone<%= index %>" class="form-control" name="phone" value="<%= address.phone %>" required>
                                                    </div>
                                                    <div class="col-md-6 mb-3">
                                                        <label for="altPhone<%= index %>" class="form-label fw-bold">Alt Phone</label>
                                                        <input type="text" id="altPhone<%= index %>" class="form-control" name="altPhone" value="<%= address.altPhone %>" required>
                                                    </div>
                                                </div>
                                                <div class="form-check">
                                                    <input class="form-check-input" type="checkbox" name="isDefault" id="isDefault<%= index %>" value="true" <%= address.isDefault ? 'checked' : '' %>>
                                                    <label class="form-check-label fw-bold" for="isDefault<%= index %>">
                                                        Set as default address
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="modal-footer">
                                                <button class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                                <button type="submit" class="btn btn-primary">Update Address</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            <% }) %>
                        <% } else { %>
                            <div class="empty-address">
                                <i class="fas fa-map-marker-alt"></i>
                                <p class="mb-0">No addresses found. Please add one to continue.</p>
                            </div>
                        <% } %>
                    </div>
                </div>

                <!-- Payment Method Section -->
                <div class="checkout-card">
                    <div class="card-header">
                        <h5>
                            <i class="fas fa-credit-card"></i>
                            Payment Method
                        </h5>
                    </div>
                    <div class="card-body">
                        <form method="POST" action="/orders" id="checkoutForm">
                            <% if (total <= 1000) { %>
                                <div class="payment-option selected">
                                    <input class="form-check-input" type="radio" name="paymentMethod" id="cod" value="COD" checked>
                                    <label class="form-check-label" for="cod">
                                        <i class="fas fa-money-bill-wave text-success me-2"></i>
                                        Cash on Delivery (COD)
                                    </label>
                                </div>
                            <% } else { %>
                                <div class="payment-option disabled" title="COD is only available for orders up to ₹1000">
                                    <input class="form-check-input" type="radio" name="paymentMethod" id="cod" value="COD" disabled>
                                    <label class="form-check-label text-muted" for="cod">
                                        <i class="fas fa-money-bill-wave text-secondary me-2"></i>
                                        Cash on Delivery (Not Available for orders above ₹1000)
                                    </label>
                                </div>
                            <% } %>

                            <!-- <div class="payment-option disabled">
                                <input class="form-check-input" type="radio" name="paymentMethod" id="upi" value="UPI" disabled>
                                <label class="form-check-label" for="upi">
                                    <i class="fab fa-google-pay text-primary me-2"></i>
                                    UPI / Google Pay / PhonePe
                                </label>
                            </div> -->
                            <div class="payment-option ">
                                <input class="form-check-input" type="radio" name="paymentMethod" id="online" value="Online" >
                                <label class="form-check-label" for="online">
                                    <i class="fas fa-credit-card text-info me-2"></i>
                                    Online Payment
                                </label>
                            </div>

                            <input type="hidden" name="addressId" id="formAddressId" value="">
                            <input type="hidden" id="orderTotalAmount" value="<%= total %>">
                            <input type="hidden" id="razorpayKey" value="<%= razorpayKeyId %>">
                            <input type="hidden" name="couponId" id="couponId" value="<%= appliedCoupon || '' %>">
                            <input type="hidden" name="offerPrice" id="offerPrice" value="<%= couponDiscount || 0 %>">
                            <input type="hidden" name="retryOrderId" id="retryOrderId" value="<%= retryOrderId %>">
                            <input type="hidden" id="existingRazorpayOrderId" value="<%= existingRazorpayOrderId %>">




                            <div class="mt-4">
                                <% if (userAddresses && userAddresses.length > 0) { %>
                                    <button type="button" class="place-order-btn" id="placeOrderBtn">
                                        <i class="fas fa-check-circle"></i>
                                        Place Order
                                    </button>
                                <% } else { %>
                                    <button type="button" class="place-order-btn" disabled title="Please add an address to place order">
                                        <i class="fas fa-exclamation-circle"></i>
                                        Add Address to Continue
                                    </button>
                                <% } %>
                            </div>

                            <!-- COD Confirmation Modal -->
                            <div class="modal fade" id="codConfirmModal" tabindex="-1" aria-hidden="true">
                                <div class="modal-dialog modal-dialog-centered">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title">
                                                <i class="fas fa-check-circle text-success me-2"></i>
                                                Confirm Your Order
                                            </h5>
                                        </div>
                                        <div class="modal-body">
                                            <p class="mb-3">You're about to place an order with Cash on Delivery payment method.</p>
                                            <div class="d-flex align-items-center p-3 bg-light rounded">
                                                <i class="fas fa-info-circle text-primary me-2"></i>
                                                <small class="text-muted">Please keep the exact amount ready for payment upon delivery.</small>
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                            <button type="submit" class="btn btn-success"  id="codConfirmBtn">
                                                <i class="fas fa-check"></i>
                                                Confirm Order
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <!-- Right Column: Order Summary -->
            <div class="col-lg-5">
                <div class="order-summary">
                    <div class="checkout-card">
                        <div class="card-header">
                            <h5>
                                <i class="fas fa-receipt"></i>
                                Order Summary
                            </h5>
                        </div>
                        <div class="card-body">
                            <!-- Order Items -->
                            <div class="order-items">
                                <% cart.items.forEach(item => { %>
                                    <div class="order-item">
                                        <img src="/uploads/re-image/<%= item.productId.productImage[0] %>" 
                                             alt="<%= item.productId.productName %>" class="item-image">
                                        <div class="item-details">
                                            <h6><%= item.productId.productName %></h6>
                                            <p class="text-muted">
                                                Qty: <%= item.quantity %> <br> Price: <s>₹<%= item.productId.regularPrice %></s> ₹<%= item.price %> 
                                                <% if (item.productId.productOffer) { %>
                                                    <span class="offer-badge"><%= item.productId.productOffer %>% OFF</span>
                                                <% } %>
                                            </p>
                                        </div>
                                        <div class="item-price">₹<%= item.totalPrice %></div>
                                    </div>
                                <% }) %>
                            </div>

                           

                            <!-- Price Summary -->
                            <div class="price-summary">
                                <h5>
                                    <i class="fas fa-calculator"></i>
                                    Price Details
                                </h5>
                                <div class="price-row">
                                    <span>Subtotal</span>
                                    <span>₹<%= subtotal %></span>
                                </div>
                                <div class="price-row">
                                    <span>Discount</span>
                                    <!-- <span class="text-success">- ₹ discount %></span> -->
                                    <span class="text-success" id="discountDisplay">- ₹0</span>
                                </div>
                                <div class="price-row">
                                    <span>Shipping</span>
                                    <span>₹<%= shipping %></span>
                                </div>
                                <div class="price-row">
                                    <span>Total Amount</span>
                                    <span id="totalDisplay" class="text-brand">₹<%= total %></span>
                                </div>
                            </div>


                            <div class="coupon-section mt-3">
                                <input type="text" id="couponCode" class="form-control mb-2" placeholder="Enter coupon code">
                                <button class="btn btn-outline-primary btn-sm" id="applyCouponBtn">Apply Coupon</button>
                                <button class="btn btn-outline-danger btn-sm d-none" id="removeCouponBtn">Remove Coupon</button>
                                <div id="couponMessage" class="mt-2 text-success"></div>
                            </div>


                                                        <!-- Toggle link -->
                            <div class="mt-3">
                            <a href="#" id="toggleCoupons" class="text-primary text-decoration-underline">
                                View Available Coupons
                            </a>
                            </div>

                            <!-- Coupon list (hidden initially) -->
                            <div id="availableCoupons" class="mt-3 d-none">
                            <% if (coupons && coupons.length > 0) { %>
                                <div class="row">
                                <% coupons.forEach(coupon => { %>
                                    <div class="col-md-6 mb-2">
                                    <div class="card shadow-sm border rounded p-2 coupon-card h-100" style="cursor: pointer;" data-code="<%= coupon.name %>">
                                        <div class="card-body p-2">
                                        <h6 class="mb-1 text-dark"><%= coupon.name %> <small class="text-muted">(<%= coupon.type %>)</small></h6>
                                        <% if(coupon.discountType==="percentage"){%>
                                        <p class="mb-1 small text-success">Save <%= coupon.offerPrice %>% on orders above ₹<%= coupon.minimumPrice %></p>
                                        <%}else{%>
                                        <p class="mb-1 small text-success">Save ₹<%= coupon.offerPrice %> on orders above ₹<%= coupon.minimumPrice %></p>   
                                        <%}%>
                                        <p class="small text-muted">Expires on <%= new Date(coupon.expireOn).toLocaleDateString() %></p>
                                        </div>
                                    </div>
                                    </div>
                                <% }) %>
                                </div>
                            <% } else { %>
                                <p class="text-muted">No available coupons</p>
                            <% } %>
                            </div>




                        </div>  
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const placeOrderBtn = document.getElementById("placeOrderBtn");
        const addressRadios = document.querySelectorAll('input[name="selectedAddress"]');
        const formAddressId = document.getElementById('formAddressId');
        const addressItems = document.querySelectorAll('.address-item');
        const paymentOptions = document.querySelectorAll('.payment-option');

        const codConfirmModalEl = document.getElementById('codConfirmModal');
        const codConfirmModal = new bootstrap.Modal(codConfirmModalEl);
        const codConfirmBtn = document.getElementById("codConfirmBtn");
        codConfirmBtn.addEventListener("click", () => {
            document.getElementById("checkoutForm").submit();
        });



        const couponCodeInput = document.getElementById("couponCode");
        const applyCouponBtn = document.getElementById("applyCouponBtn");
        const removeCouponBtn = document.getElementById("removeCouponBtn");
        const couponMessage = document.getElementById("couponMessage");
        const totalAmountInput = document.getElementById("orderTotalAmount");
        const totalDisplay = document.getElementById("totalDisplay");
        const discountDisplay = document.getElementById("discountDisplay");


        let originalTotal = parseInt(totalAmountInput.value);
        let appliedDiscount = 0;

        applyCouponBtn?.addEventListener("click", async () => {
            const couponCode = couponCodeInput.value.trim();
            if (!couponCode) return;

            try {
                const response = await fetch("/apply-coupon", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ couponCode, subtotal: originalTotal })
                });

                const data = await response.json();

                if (data.success) {
                    appliedDiscount = data.offerPrice;
                    console.log(appliedDiscount);
                    
                    const newTotal = originalTotal - appliedDiscount;

                    totalAmountInput.value = newTotal;
                    totalDisplay.textContent = `₹${newTotal}`;
                    discountDisplay.textContent = `- ₹${appliedDiscount}`;
                    couponMessage.textContent = data.message+ (data.discountType === 'percentage' ? " (Percentage Based)" : " (Flat Discount)");
                    couponMessage.className = "text-success";

                    document.getElementById("couponId").value = data.couponId;
                    document.getElementById("offerPrice").value = data.offerPrice;

                    applyCouponBtn.classList.add("d-none");
                    removeCouponBtn.classList.remove("d-none");

                    const codInput = document.getElementById("cod");
                    const codLabel = document.querySelector("label[for='cod']");
                    if (newTotal > 1000) {
                        codInput.disabled = true;
                        codInput.checked = false;
                        codLabel.innerHTML = `<i class="fas fa-money-bill-wave text-secondary me-2"></i> COD (Not Available above ₹1000)`;
                        codLabel.classList.add("text-muted");
                    } else {
                        codInput.disabled = false;
                        codLabel.innerHTML = `<i class="fas fa-money-bill-wave text-success me-2"></i> Cash on Delivery (COD)`;
                        codLabel.classList.remove("text-muted");
                    }


                } else {
                    couponMessage.textContent = data.message;
                    couponMessage.className = "text-danger";
                }
            } catch (error) {
                couponMessage.textContent = "Error applying coupon.";
                couponMessage.className = "text-danger";
            }
        });





        

        removeCouponBtn?.addEventListener("click", () => {
            totalAmountInput.value = originalTotal;
            totalDisplay.textContent = `₹${originalTotal}`;
            discountDisplay.textContent = `- ₹0`;

            appliedDiscount = 0;

            couponCodeInput.value = "";
            couponMessage.textContent = "Coupon removed.";
            couponMessage.className = "text-muted";

            applyCouponBtn.classList.remove("d-none");
            removeCouponBtn.classList.add("d-none");

            
            const codInput = document.getElementById("cod");
            const codLabel = document.querySelector("label[for='cod']");
            if (originalTotal > 1000) {
                codInput.disabled = true;
                codInput.checked = false;
                codLabel.innerHTML = `<i class="fas fa-money-bill-wave text-secondary me-2"></i> COD (Not Available above ₹1000)`;
                codLabel.classList.add("text-muted");
            } else {
                codInput.disabled = false;
                codLabel.innerHTML = `<i class="fas fa-money-bill-wave text-success me-2"></i> Cash on Delivery (COD)`;
                codLabel.classList.remove("text-muted");
            }


        });



        document.querySelector('#codConfirmModal .btn-secondary').addEventListener('click', () => {
            codConfirmModal.hide();
        });


        
        addressRadios.forEach((radio, index) => {
            radio.addEventListener('change', function() {
                addressItems.forEach(item => item.classList.remove('selected'));
                if (this.checked) {
                    addressItems[index].classList.add('selected');
                }
            });
        });

        
        document.querySelectorAll('input[name="paymentMethod"]').forEach((radio, index) => {
            radio.addEventListener('change', function() {
                paymentOptions.forEach(option => option.classList.remove('selected'));
                if (this.checked) {
                    paymentOptions[index].classList.add('selected');
                }
            });
        });

        
        placeOrderBtn.addEventListener("click", async (e) => {
            const selectedRadio = Array.from(addressRadios).find(r => r.checked);
            const selectedPayment = document.querySelector('input[name="paymentMethod"]:checked')?.value;

            if (!selectedRadio) {
                e.preventDefault();
                return Swal.fire({
                    icon: 'warning',
                    title: 'No Address Selected',
                    text: 'Please select or add a delivery address to proceed.',
                    confirmButtonColor: '#667eea',
                    confirmButtonText: 'OK'
                });
            }

            formAddressId.value = selectedRadio.value;
            console.log("Selected Address ID:", selectedRadio.value);




                        // Validate cart quantities before placing the order
            try {
                const validateRes = await fetch("/validate-quantity", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    }
                });

                const validateData = await validateRes.json();

                if (!validateData.valid) {
                    e.preventDefault();

                    let outOfStockMsg = "Some items are out of stock(Please Remove from cart):\n";
                    validateData.removedItems.forEach(item => {
                        outOfStockMsg += `- ${item.name} (Size: ${item.size})\n`;
                    });

                    await Swal.fire({
                        icon: "error",
                        title: "Out of Stock",
                        html: `<pre style="text-align: left">${outOfStockMsg}</pre>`,
                        confirmButtonColor: "#6777ef",
                        confirmButtonText: "Go to Cart"
                    });

                    window.location.href = "/cart";
                    return;
                }
            } catch (err) {
                e.preventDefault();
                console.error("Stock validation failed", err);
                return Swal.fire({
                    icon: "error",
                    title: "Validation Error",
                    text: "Unable to validate cart items. Please try again later.",
                    confirmButtonColor: "#6777ef"
                });
            }





            const orderTotal = parseInt(document.getElementById("orderTotalAmount").value || 0);
            if (selectedPayment === 'COD' && orderTotal > 1000) {
                e.preventDefault();
                return Swal.fire({
                    icon: 'error',
                    title: 'COD Not Allowed',
                    text: 'Cash on Delivery is only available for orders up to ₹1000. Please choose Online Payment.',
                    confirmButtonColor: '#6777ef'
                });
            }




            if (selectedPayment === 'COD') {
                codConfirmModal.show();
            } else if (selectedPayment === 'Online') {
                e.preventDefault();

                try {
                    const totalAmount = document.getElementById("orderTotalAmount").value;
                    const retryOrderId = document.getElementById("retryOrderId").value;
                    const existingRazorpayOrderId = document.getElementById("existingRazorpayOrderId").value;

                    const response = await fetch("/create-razorpay-order", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ 
                            amount: parseInt(totalAmount) * 100,
                            retryOrderId,
                            existingRazorpayOrderId
                        }) 
                    });

                    const data = await response.json();

                    if (!data.success) {
                        return Swal.fire("Error", "Failed to create Razorpay order", "error");
                    }

                    const razorpayKey = document.getElementById("razorpayKey").value;

                    const options = {
                        key: razorpayKey,
                        amount: data.order.amount,
                        currency: "INR",
                        name: "IzCubes",
                        description: "Purchase",
                        order_id: data.order.id,
                        handler: async function (response) {
                            const form = document.getElementById("checkoutForm");

                            const payment_id = document.createElement("input");
                            payment_id.type = "hidden";
                            payment_id.name = "razorpay_payment_id";
                            payment_id.value = response.razorpay_payment_id;

                            const order_id = document.createElement("input");
                            order_id.type = "hidden";
                            order_id.name = "razorpay_order_id";
                            order_id.value = response.razorpay_order_id;

                            const signature = document.createElement("input");
                            signature.type = "hidden";
                            signature.name = "razorpay_signature";
                            signature.value = response.razorpay_signature;

                            form.appendChild(payment_id);
                            form.appendChild(order_id);
                            form.appendChild(signature);

                            form.submit();
                            },
                        modal: {
                            ondismiss:async function () {
                                await fetch("/razorpay-payment-failed", {
                                    method: "POST",
                                    headers: { "Content-Type": "application/json" },
                                    body: JSON.stringify({
                                    razorpay_order_id: data.order.id,
                                    amount: parseInt(totalAmount) * 100,
                                    addressId: selectedRadio.value,
                                    couponId: document.getElementById("couponId").value,
                                    offerPrice: parseInt(document.getElementById("offerPrice").value || 0)
                                    })
                                });
                                window.location.href = `/order-failure?razorpay_order_id=${data.order.id}`;
                            }
                        },
                        theme: {
                            color: "#6777ef"
                        }
                    };

                    const rzp = new Razorpay(options);
                    rzp.open();
                } catch (err) {
                    console.error(err);
                    Swal.fire("Error", "Payment initialization failed", "error");
                }
            } else {
                
                document.getElementById("checkoutForm").submit();
            }
        });


        // Auto-apply coupon on retry
        const appliedCouponId = document.getElementById("couponId")?.value;
        const offerPrice = parseInt(document.getElementById("offerPrice")?.value || 0);

        if (appliedCouponId && offerPrice > 0) {
            
            const newTotal = originalTotal - offerPrice;
            totalAmountInput.value = newTotal;
            totalDisplay.textContent = `₹${newTotal}`;
            discountDisplay.textContent = `- ₹${offerPrice}`;
            couponMessage.textContent = "Coupon applied.";
            couponMessage.className = "text-success";

            
            applyCouponBtn.classList.add("d-none");
            removeCouponBtn.classList.remove("d-none");

           
            const matchedCard = document.querySelector(`.coupon-card[data-code]`);
            if (matchedCard) {
                couponCodeInput.value = matchedCard.getAttribute("data-code");
            }
        }

    });

    
    function confirmDelete() {
        return confirm('Are you sure you want to delete this address?');
    }
</script>

<script>
  
  document.getElementById('toggleCoupons').addEventListener('click', function (e) {
    e.preventDefault();
    const couponSection = document.getElementById('availableCoupons');
    couponSection.classList.toggle('d-none');
    this.textContent = couponSection.classList.contains('d-none') ? 'View Available Coupons' : 'Hide Coupons';
  });

  
  document.querySelectorAll('.coupon-card').forEach(card => {
    card.addEventListener('click', function () {
      const code = this.getAttribute('data-code');
      document.getElementById('couponCode').value = code;
      document.getElementById('applyCouponBtn').click();
    });
  });
</script>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>


<%- include("../../views/partials/user/footer") %>